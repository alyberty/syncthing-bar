//
//  SyncthingFolder.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - SyncthingFolder properties

extension SyncthingFolder {

    @NSManaged public var id: String
    @NSManaged public var path: String
    @NSManaged public var state: Int32 // cannot mark as optional because Objective-C compatibility issues

    @NSManaged public var syncedFiles: Set<SyncthingFile>

}

// MARK: - SyncthingFolder KVC compliant to-many accessors and helpers

extension SyncthingFolder {

    @NSManaged private func addSyncedFilesObject(object: SyncthingFile)
    @NSManaged private func removeSyncedFilesObject(object: SyncthingFile)
    @NSManaged public func addSyncedFiles(syncedFiles: Set<SyncthingFile>)
    @NSManaged public func removeSyncedFiles(syncedFiles: Set<SyncthingFile>)

    public func addSyncedFile(syncedFile: SyncthingFile) { self.addSyncedFilesObject(syncedFile) }
    public func removeSyncedFile(syncedFile: SyncthingFile) { self.removeSyncedFilesObject(syncedFile) }

}

// MARK: - SyncthingFolder query attributes

extension SyncthingFolder {

    public static let id = AlecrimCoreData.Attribute<String>("id")
    public static let path = AlecrimCoreData.Attribute<String>("path")
    public static let state = AlecrimCoreData.NullableAttribute<Int32>("state")

    public static let syncedFiles = AlecrimCoreData.Attribute<Set<SyncthingFile>>("syncedFiles")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: SyncthingFolder {

    public var id: AlecrimCoreData.Attribute<String> { return AlecrimCoreData.Attribute<String>("id", self) }
    public var path: AlecrimCoreData.Attribute<String> { return AlecrimCoreData.Attribute<String>("path", self) }
    public var state: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("state", self) }

    public var syncedFiles: AlecrimCoreData.Attribute<Set<SyncthingFile>> { return AlecrimCoreData.Attribute<Set<SyncthingFile>>("syncedFiles", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    public var syncthingFolders: AlecrimCoreData.Table<SyncthingFolder> { return AlecrimCoreData.Table<SyncthingFolder>(dataContext: self) }

}

